server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs
  - job_name: docker
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker
          __path__: /var/lib/docker/containers/*/*log
    
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            attrs:
      - json:
          expressions:
            tag:
          source: attrs
      - regex:
          expression: (?P<container_name>(?:[^|]*))\|(?P<image_name>(?:[^|]*))\|(?P<image_id>(?:[^|]*))\|(?P<container_id>(?:[^|]*))
          source: tag
      - timestamp:
          format: RFC3339Nano
          source: time
      - labels:
          stream:
          container_name:
          image_name:
          image_id:
          container_id:
      - output:
          source: output

  # System logs
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: system
          __path__: /var/log/*.log
    
    pipeline_stages:
      - match:
          selector: '{job="system"}'
          stages:
            - regex:
                expression: '(?P<timestamp>\S+\s+\S+\s+\S+)\s+(?P<hostname>\S+)\s+(?P<service>\S+).*'
            - labels:
                hostname:
                service:
      - timestamp:
          format: Jan 2 15:04:05
          source: timestamp

  # Application logs
  - job_name: fulsk-backend
    static_configs:
      - targets:
          - localhost
        labels:
          job: fulsk-backend
          __path__: /var/log/fulsk/backend.log
    
    pipeline_stages:
      - json:
          expressions:
            level: level
            message: message
            timestamp: timestamp
            service: service
            module: module
      - labels:
          level:
          service:
          module:
      - timestamp:
          format: RFC3339
          source: timestamp

  # Nginx access logs
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-access
          __path__: /var/log/nginx/access.log
    
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>\S+)\s+\S+\s+\S+\s+\[(?P<time_local>[^\]]+)\]\s+"(?P<request>[^"]*)"\s+(?P<status>\S+)\s+(?P<body_bytes_sent>\S+)\s+"(?P<http_referer>[^"]*)"\s+"(?P<http_user_agent>[^"]*)"'
      - labels:
          remote_addr:
          status:
          method:
      - timestamp:
          format: 02/Jan/2006:15:04:05 -0700
          source: time_local

  # Nginx error logs
  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-error
          __path__: /var/log/nginx/error.log
    
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\S+\s+\S+)\s+\[(?P<level>\S+)\]\s+(?P<message>.*)'
      - labels:
          level:
      - timestamp:
          format: 2006/01/02 15:04:05
          source: timestamp

  # PostgreSQL logs
  - job_name: postgres
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgres
          __path__: /var/log/postgresql/*.log
    
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\S+\s+\S+)\s+\[(?P<pid>\d+)\]\s+(?P<level>\S+):\s+(?P<message>.*)'
      - labels:
          level:
          pid:
      - timestamp:
          format: 2006-01-02 15:04:05.000 MST
          source: timestamp

  # Redis logs
  - job_name: redis
    static_configs:
      - targets:
          - localhost
        labels:
          job: redis
          __path__: /var/log/redis/*.log
    
    pipeline_stages:
      - regex:
          expression: '^(?P<pid>\d+):(?P<role>\w+)\s+(?P<timestamp>\S+\s+\S+)\s+(?P<level>\S+)\s+(?P<message>.*)'
      - labels:
          level:
          role:
          pid:
      - timestamp:
          format: 02 Jan 15:04:05.000
          source: timestamp